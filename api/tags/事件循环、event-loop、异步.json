{"name":"事件循环、event loop、异步","slug":"事件循环、event-loop、异步","count":1,"postlist":[{"title":"事件循环 event loop","slug":"事件循环-event-loop","date":"2018-09-08T09:12:51.000Z","updated":"2018-09-08T12:52:28.189Z","comments":true,"path":"api/articles/事件循环-event-loop.json","excerpt":"","keywords":null,"cover":null,"content":"<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  resolve( )</span><br><span class=\"line\">&#125;).then(<span class=\"function\"><span class=\"params\">( )</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"number\">1</span>)</span><br><span class=\"line\">  <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    resolve( )</span><br><span class=\"line\">  &#125;).then(<span class=\"function\"><span class=\"params\">( )</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"number\">2</span>)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  setTimeout(<span class=\"function\"><span class=\"params\">( )</span> =&gt;</span> &#123; <span class=\"built_in\">console</span>.log(<span class=\"number\">3</span>) &#125;, <span class=\"number\">0</span>)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"number\">4</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">setTimeout(<span class=\"function\"><span class=\"params\">( )</span> =&gt;</span> &#123; <span class=\"built_in\">console</span>.log(<span class=\"number\">5</span>) &#125;, <span class=\"number\">0</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 4</span></span><br><span class=\"line\"><span class=\"comment\">// 1</span></span><br><span class=\"line\"><span class=\"comment\">// 2</span></span><br><span class=\"line\"><span class=\"comment\">// 5</span></span><br><span class=\"line\"><span class=\"comment\">// 3</span></span><br></pre></td></tr></table></figure>\n<p>``</p>\n<h5 id=\"首先将所有代码放入-macrotask-queue-中执行：\"><a href=\"#首先将所有代码放入-macrotask-queue-中执行：\" class=\"headerlink\" title=\"首先将所有代码放入 macrotask queue 中执行：\"></a>首先将所有代码放入 <code>macrotask queue</code> 中执行：</h5><p><img src=\"/img/事件循环-event-loop/step one.png\" alt=\"step one\"></p>\n<p>↑ 将匿名函数放入 <code>microtask queue</code> 中排队等待。</p>\n<p><img src=\"/img/事件循环-event-loop/step two.png\" alt=\"step two\"></p>\n<p>↑ 控制台输出 ‘4’。</p>\n<p><img src=\"/img/事件循环-event-loop/step three.png\" alt=\"step three\"></p>\n<p>↑ 放入 <code>macrotask queue</code>  中排队等待执行。</p>\n<p><code>microtask queue</code> :</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">microtask1：/* P1.then 中的回调函数 */</span><br></pre></td></tr></table></figure>\n<h5 id=\"macrotask-queue-任务执行结束，检查-microtask-queue-，发现-task1，将-task1-推出执行：\"><a href=\"#macrotask-queue-任务执行结束，检查-microtask-queue-，发现-task1，将-task1-推出执行：\" class=\"headerlink\" title=\"macrotask queue 任务执行结束，检查 microtask queue ，发现 task1，将 task1 推出执行：\"></a><code>macrotask queue</code> 任务执行结束，检查 <code>microtask queue</code> ，发现 <code>task1</code>，将 <code>task1</code> 推出执行：</h5><p><img src=\"/img/事件循环-event-loop/step four.png\" alt=\"step four\"></p>\n<p>↑ 控制台输出 ‘1’。</p>\n<p><img src=\"/img/事件循环-event-loop/setp five.png\" alt=\"setp five\"></p>\n<p>↑ 将 <code>P2.then</code> 中的匿名函数放入 <code>microtask queue</code> 中。</p>\n<p><code>microtask queue</code>:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">maicrotask2: <span class=\"comment\">/* P2.then 中的回调函数  () =&gt; console.log(2)*/</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"/img/事件循环-event-loop/step six.png\" alt=\"step six\"></p>\n<p>↑ 放入 <code>macrotask queue</code>  中排队等待执行。</p>\n<p><code>macrotask queue</code>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">macrotask1: <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> <span class=\"built_in\">console</span>.log(<span class=\"number\">5</span>)</span><br><span class=\"line\">macortask2: () -&gt; <span class=\"built_in\">console</span>.log(<span class=\"number\">3</span>)</span><br></pre></td></tr></table></figure>\n<h5 id=\"microtask1-执行结束，检查-microtask-queue-发现-microtask2，推出执行：\"><a href=\"#microtask1-执行结束，检查-microtask-queue-发现-microtask2，推出执行：\" class=\"headerlink\" title=\"microtask1 执行结束，检查 microtask queue 发现 microtask2，推出执行：\"></a><code>microtask1</code> 执行结束，检查 <code>microtask queue</code> 发现 <code>microtask2</code>，推出执行：</h5><p><img src=\"/img/事件循环-event-loop/step seven.png\" alt=\"step seven\"></p>\n<p>↑ 控制台输出 ‘2’。</p>\n<p>##### </p>\n<h5 id=\"microtask2-执行结束，检查-microtask-queue-，microtask-queue-为空，转而执行-macrotask-queue-中的任务：\"><a href=\"#microtask2-执行结束，检查-microtask-queue-，microtask-queue-为空，转而执行-macrotask-queue-中的任务：\" class=\"headerlink\" title=\"microtask2 执行结束，检查 microtask queue ，microtask queue  为空，转而执行 macrotask queue 中的任务：\"></a><code>microtask2</code> 执行结束，检查 <code>microtask queue</code> ，<code>microtask queue</code>  为空，转而执行 <code>macrotask queue</code> 中的任务：</h5><p><code>macrotask1</code> 执行，控制台输出 ‘5’。</p>\n<p><code>macrotask2</code> 执行，控制台输出 ‘3’。</p>\n<h5 id=\"macrotask-queue-执行结束，检查-microtask-queue，-mirotask-queue为空，event-loop-结束。\"><a href=\"#macrotask-queue-执行结束，检查-microtask-queue，-mirotask-queue为空，event-loop-结束。\" class=\"headerlink\" title=\"macrotask queue 执行结束，检查 microtask queue， mirotask queue为空，event loop 结束。\"></a><code>macrotask queue</code> 执行结束，检查 <code>microtask queue</code>， <code>mirotask queue</code>为空，event loop 结束。</h5>","text":"1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br>new Promise((resolve, r","link":"","raw":null,"photos":[],"categories":[],"tags":[{"name":"事件循环、event loop、异步","slug":"事件循环、event-loop、异步","count":1,"path":"api/tags/事件循环、event-loop、异步.json"}]}]}